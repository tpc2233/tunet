# tunet_base.yaml

# --- Data Settings ---
data:
  src_dir: MUST BE PROVIDED BY USER
  dst_dir: MUST BE PROVIDED BY USER
  output_dir: MUST BE PROVIDED BY USER
  resolution: 512                     # 512 or 1024
  overlap_factor: 0.25                # default 0.25, range 0.0 to 1.0


# --- Model Settings ---
model:
  model_size_dims: 64                # hidden_unet_size, default 64 or 128 or 256 or 512



###############################################
#### only change the below if really need #####
###############################################
# --- dataloader ---
dataloader:
  datasets:
    src_augs: [] 
      # - _target_: albumentations.SomeSrcOnlyAug
      #   p: 0.5

    dst_augs: [] 
      # - _target_: albumentations.SomeDstOnlyAug
      #   p: 0.5

    shared_augs: # Augmentations applied identically to source and destination
      - _target_: albumentations.HorizontalFlip
        p: 0.0
      - _target_: albumentations.VerticalFlip # Example
        p: 0.0
## WIP TODO ThinPlateSpline version missmatch
#      - _target_: albumentations.ThinPlateSpline
#        p: 1.0            # Apply %% of the time
#        scale_range: [0.02, 0.06]       # <-- KEY: Controls intensity/scale (try 0.1 to 0.6+)
#        num_control_points: 4
#        interpolation: 1  # cv2.INTER_LINEAR (usually good enough)
#        border_mode: 4    # cv2.BORDER_REPLICATE        
        
      - _target_: albumentations.GridDistortion
        p: 0.0            # Apply %%% of the time
        num_steps: 5      # <-- KEY: Fewer steps = larger waves (try 4, 5, 6)
        distort_limit: [-0.6, 0.6]  # <-- Controls intensity (try 0.2 to 0.5)
        interpolation: 1  # cv2.INTER_LINEAR
        border_mode: 4    # cv2.BORDER_REPLICATE 
## WIP TODO ElasticTransform too noise without mask        
#      - _target_: albumentations.ElasticTransform
#        p: 0.2  # Apply % of the time
#        alpha: 100
#        sigma: 100
#        interpolation: 1 # cv2.INTER_LINEAR
#        border_mode: 4   # cv2.BORDER_REPLICATE         
      - _target_: albumentations.Affine
        scale: [0.9, 1.1]           # Scale range
        translate_percent: [-0.1, 0.1] # Translate range
        rotate: [-3, 3]             # Rotation range in degrees
        shear: [-1, 1]                # Shear range in degrees (optional)
        interpolation: 2              # 2 = cv2.INTER_CUBIC
        keep_ratio: true              # IMPORTANT for paired images if scaling
        p: 0.0                       # Apply Affine %%% of the time
        
        
      - _target_: albumentations.RandomGamma # Use the custom name we handle
        gamma_limit: [40, 160] # Example: Albumentations limit
        p: 0.0          # Apply Color Jitter % of the time        
     
        
# --- Training Settings ---
training:
  iterations_per_epoch: 500          # Number of batches ints per save cycle
  batch_size: 2                      # Batch size *per GPU*
  lr: !!float 1e-4                   # Learning rate (1e-4 to 5e-5)
  loss: l1                           #loss
  lambda_lpips: 1.0                  #loss_lambda
  use_amp: false                     # false or True. To enable fp16 Mixed-precision training
  num_workers: 4                     # Dataloader workers per GPU
  prefetch_factor: 2                 # Dataloader prefetch factor

# --- Logging & Saving Settings ---
logging:
  log_interval: 5                   # Log training status every N batches
  preview_batch_interval: 35        # Save preview image every N batches (0=disable)
  preview_refresh_rate: 5           # Refresh preview images every N preview saves (0=disable)

saving:
  keep_last_checkpoints: 4           # Number of checkpoints to keep (excluding latest)
